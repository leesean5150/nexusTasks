{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\65911\\\\nexusTasks\\\\Task 1\\\\Sean\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // declare updateable variable representing new task that user wants to add, newTask, using hook function\n  const [newTask, setNewTask] = useState(\"\");\n  // declare updateable variabe representing the new key generated for the new task that the user input, newKey, using hook function\n  const [newKey, setNewKey] = useState(0);\n  // declare updateable array as a list of all the tasks that the user has completed\n  const [completedList, setCompletedList] = useState([]);\n  // declare updateable array as a list of all the tasks that the user wants to complete, listOfTasks, using hook function\n  const [newList, setNewList] = useState([]);\n\n  // add value of user input to the array of tasks and clear the input field\n  function addTask() {\n    setNewKey(newKey + 1);\n    const task = {\n      id: newKey,\n      value: newTask\n    };\n    setNewList(oldList => [...oldList, task]);\n    setNewTask(\"\");\n    console.log(newList);\n  }\n\n  // declaring a function to shift completed task from pending tasks list to completed tasks list\n  const handleCompleted = taskCompleted => {\n    const updatedList = newList.filter(task => task.value !== taskCompleted.value);\n    setNewList(updatedList);\n    setCompletedList(oldList => [...oldList, taskCompleted]);\n  };\n\n  // declaring a function to delete task of users choosing\n  const handleDelete = taskToDelete => {\n    const updatedList = newList.filter(task => task.value !== taskToDelete);\n    setNewList(updatedList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a task...\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask(),\n      children: \"Add task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pending Tasks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), newList.length === 0 ? \"You have no pending tasks.\" : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: newList.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [task.value, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCompleted(task),\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(task.value),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Completed Tasks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: completedList.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: task.value\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"r+M/Ojm8gD0F4ZyojLhBm1K+5pE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","newTask","setNewTask","newKey","setNewKey","completedList","setCompletedList","newList","setNewList","addTask","task","id","value","oldList","console","log","handleCompleted","taskCompleted","updatedList","filter","handleDelete","taskToDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","style","display","flexDirection","length","map","_c","$RefreshReg$"],"sources":["C:/Users/65911/nexusTasks/Task 1/Sean/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction App() {\r\n// declare updateable variable representing new task that user wants to add, newTask, using hook function\r\n    const [newTask, setNewTask] = useState(\"\");\r\n// declare updateable variabe representing the new key generated for the new task that the user input, newKey, using hook function\r\n    const [newKey, setNewKey] = useState(0);\r\n// declare updateable array as a list of all the tasks that the user has completed\r\n    const [completedList, setCompletedList] = useState([]);\r\n// declare updateable array as a list of all the tasks that the user wants to complete, listOfTasks, using hook function\r\n    const [newList, setNewList] = useState([]);\r\n\r\n    // add value of user input to the array of tasks and clear the input field\r\n    function addTask() {\r\n        setNewKey(newKey + 1)\r\n        const task = {\r\n            id: newKey,\r\n            value: newTask\r\n        }\r\n        setNewList(oldList => [...oldList, task]);\r\n        setNewTask(\"\")\r\n        console.log(newList)\r\n    }\r\n\r\n    // declaring a function to shift completed task from pending tasks list to completed tasks list\r\n    const handleCompleted = (taskCompleted) => {\r\n        const updatedList = newList.filter((task) => task.value !== taskCompleted.value);\r\n        setNewList(updatedList);\r\n        setCompletedList(oldList => [...oldList, taskCompleted])\r\n    }\r\n\r\n    // declaring a function to delete task of users choosing\r\n    const handleDelete = (taskToDelete) => {\r\n        const updatedList = newList.filter((task) => task.value !== taskToDelete);\r\n        setNewList(updatedList);\r\n      };\r\n\r\n    return (\r\n        <div className='App'>\r\n            {/* Create a header file */}\r\n            <h1>To-do List</h1>\r\n            <br></br>\r\n            {/* Create an input field for user to type new newList. Update the newTask variable based on the value in the input field */}\r\n            <input\r\n                type = 'text'\r\n                placeholder = 'Add a task...'\r\n                value = {newTask}\r\n                onChange={e => setNewTask(e.target.value)}\r\n            />\r\n            <button onClick = {() => addTask()}>Add task</button>\r\n            <br></br><br></br>\r\n            <div style={{display: \"flex\", flexDirection: \"row\"}}>\r\n                <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                <h3>Pending Tasks:</h3>\r\n                {/* Display list of tasks with a remove button*/}\r\n                {newList.length === 0 ? \"You have no pending tasks.\" :\r\n                <ul>\r\n                    {newList.map(task => (\r\n                        <li key={task.id}>\r\n                            {task.value}  \r\n                            <button onClick = {() => handleCompleted(task)}>Completed</button>\r\n                            <button onClick = {() => handleDelete(task.value)}>Remove</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                }\r\n                </div>\r\n                <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                    <br></br>\r\n                </div>\r\n                <div style ={{display: \"flex\", flexDirection: \"column\"}}>\r\n                    <h3>Completed Tasks:</h3>\r\n                    {/* Display list of tasks that are completed */}\r\n                    <ul>\r\n                        {completedList.map(task => (\r\n                            <li key={task.id}>\r\n                                {task.value}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}