{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leese\\\\Nexus\\\\todo-list\\\\todo-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // declare updateable variable representing new task that user wants to add, newTask, using hook function\n  const [newTask, setNewTask] = useState(\"\");\n  // declare updateable variabe representing the new key generated for the new task that the user input, newKey, using hook function\n  const [newKey, setNewKey] = useState(1);\n  // declare updateable array as a list of all the tasks that the user wants to complete, listOfTasks, using hook function\n  const [newList, setNewList] = useState([]);\n\n  // add value of user input to the array of tasks and clear the input field\n  function addTask() {\n    setNewKey(newKey + 1);\n    const task = {\n      id: newKey,\n      value: newTask\n    };\n    console.log(newKey);\n    setNewList(oldList => [...oldList, task]);\n    setNewTask(\"\");\n    console.log(newTask);\n    console.log(newList);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a task...\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask(),\n      children: \"Add task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 22\n    }, this), newList.length === 0 ? \"You have no pending tasks.\" : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: newList.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.value\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"43czpoM7VW3JM1OH7oGKBASd6KE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","newTask","setNewTask","newKey","setNewKey","newList","setNewList","addTask","task","id","value","console","log","oldList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","length","map","item","_c","$RefreshReg$"],"sources":["C:/Users/leese/Nexus/todo-list/todo-list/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\n\nfunction App() {\n// declare updateable variable representing new task that user wants to add, newTask, using hook function\n    const [newTask, setNewTask] = useState(\"\");\n// declare updateable variabe representing the new key generated for the new task that the user input, newKey, using hook function\n    const [newKey, setNewKey] = useState(1);\n// declare updateable array as a list of all the tasks that the user wants to complete, listOfTasks, using hook function\n    const [newList, setNewList] = useState([]);\n\n    // add value of user input to the array of tasks and clear the input field\n    function addTask() {\n        setNewKey(newKey + 1)\n        const task = {\n            id: newKey,\n            value: newTask\n        }\n        console.log(newKey)\n        setNewList(oldList => [...oldList, task]);\n        setNewTask(\"\")\n        console.log(newTask)\n        console.log(newList)\n    }\n\n    return (\n        <div className='App'>\n            {/* Create a header file */}\n            <h1>To-do List</h1>\n            <br></br>\n            {/* Create an input field for user to type new tasks. Update the newTask variable based on the value in the input field */}\n            <input\n                type = 'text'\n                placeholder = 'Add a task...'\n                value = {newTask}\n                onChange={e => setNewTask(e.target.value)}\n            />\n            <button onClick = {() => addTask()}>Add task</button>\n            <br></br><br></br>\n            {/* Display list of tasks */}\n            {newList.length === 0 ? \"You have no pending tasks.\" : \n            <ul>\n                {newList.map(item => (\n                    <li key={item.id}>{item.value}</li>\n                    ))\n                }\n            </ul>\n            }\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACf;EACI,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACI,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC3C;EACI,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,SAASW,OAAOA,CAAA,EAAG;IACfH,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;IACrB,MAAMK,IAAI,GAAG;MACTC,EAAE,EAAEN,MAAM;MACVO,KAAK,EAAET;IACX,CAAC;IACDU,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;IACnBG,UAAU,CAACO,OAAO,IAAI,CAAC,GAAGA,OAAO,EAAEL,IAAI,CAAC,CAAC;IACzCN,UAAU,CAAC,EAAE,CAAC;IACdS,OAAO,CAACC,GAAG,CAACX,OAAO,CAAC;IACpBU,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;EACxB;EAEA,oBACIP,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAEhBjB,OAAA;MAAAiB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETrB,OAAA;MACIsB,IAAI,EAAG,MAAM;MACbC,WAAW,EAAG,eAAe;MAC7BX,KAAK,EAAIT,OAAQ;MACjBqB,QAAQ,EAAEC,CAAC,IAAIrB,UAAU,CAACqB,CAAC,CAACC,MAAM,CAACd,KAAK;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFrB,OAAA;MAAQ2B,OAAO,EAAIA,CAAA,KAAMlB,OAAO,CAAC,CAAE;MAAAQ,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAAArB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEjBd,OAAO,CAACqB,MAAM,KAAK,CAAC,GAAG,4BAA4B,gBACpD5B,OAAA;MAAAiB,QAAA,EACKV,OAAO,CAACsB,GAAG,CAACC,IAAI,iBACb9B,OAAA;QAAAiB,QAAA,EAAmBa,IAAI,CAAClB;MAAK,GAApBkB,IAAI,CAACnB,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEd;AAACnB,EAAA,CA/CQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}