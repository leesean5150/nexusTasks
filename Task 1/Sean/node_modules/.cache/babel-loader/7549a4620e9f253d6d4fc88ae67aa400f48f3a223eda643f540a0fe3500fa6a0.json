{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\65911\\\\nexusTasks\\\\Task 1\\\\Sean\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // declare updateable variable representing new task that user wants to add, newTask, using hook function\n  const [newTask, setNewTask] = useState(\"\");\n  // declare updateable variabe representing the new key generated for the new task that the user input, newKey, using hook function\n  const [newKey, setNewKey] = useState(0);\n  // declare updateable array as a list of all the tasks that the user wants to complete, listOfTasks, using hook function\n  const [newList, setNewList] = useState([]);\n\n  // add value of user input to the array of tasks and clear the input field\n  function addTask() {\n    setNewKey(newKey + 1);\n    const task = {\n      id: newKey,\n      value: newTask\n    };\n    setNewList(oldList => [...oldList, task]);\n    setNewTask(\"\");\n    console.log(newList);\n  }\n\n  // declaring a function to delete task of users choosing\n  const handleDelete = taskToDelete => {\n    const updatedList = newList.filter(task => task.value !== taskToDelete);\n    console.log(updatedList);\n    setNewList(updatedList);\n    console.log(newList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a task...\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask(),\n      children: \"Add task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pending Tasks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), newList.length === 0 ? \"You have no pending tasks.\" : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: newList.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.value, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(task.value),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"uJEAJbpMC+/95g81ZnGA4sEAqBI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","newTask","setNewTask","newKey","setNewKey","newList","setNewList","addTask","task","id","value","oldList","console","log","handleDelete","taskToDelete","updatedList","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","length","map","_c","$RefreshReg$"],"sources":["C:/Users/65911/nexusTasks/Task 1/Sean/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction App() {\r\n// declare updateable variable representing new task that user wants to add, newTask, using hook function\r\n    const [newTask, setNewTask] = useState(\"\");\r\n// declare updateable variabe representing the new key generated for the new task that the user input, newKey, using hook function\r\n    const [newKey, setNewKey] = useState(0);\r\n// declare updateable array as a list of all the tasks that the user wants to complete, listOfTasks, using hook function\r\n    const [newList, setNewList] = useState([]);\r\n\r\n    // add value of user input to the array of tasks and clear the input field\r\n    function addTask() {\r\n        setNewKey(newKey + 1)\r\n        const task = {\r\n            id: newKey,\r\n            value: newTask\r\n        }\r\n        setNewList(oldList => [...oldList, task]);\r\n        setNewTask(\"\")\r\n        console.log(newList)\r\n    }\r\n\r\n    // declaring a function to delete task of users choosing\r\n    const handleDelete = (taskToDelete) => {\r\n        const updatedList = newList.filter((task) => task.value !== taskToDelete);\r\n        console.log(updatedList);\r\n        setNewList(updatedList);\r\n        console.log(newList);\r\n      };\r\n\r\n    return (\r\n        <div className='App'>\r\n            {/* Create a header file */}\r\n            <h1>To-do List</h1>\r\n            <br></br>\r\n            {/* Create an input field for user to type new newList. Update the newTask variable based on the value in the input field */}\r\n            <input\r\n                type = 'text'\r\n                placeholder = 'Add a task...'\r\n                value = {newTask}\r\n                onChange={e => setNewTask(e.target.value)}\r\n            />\r\n            <button onClick = {() => addTask()}>Add task</button>\r\n            <br></br><br></br>\r\n            <h3>Pending Tasks:</h3>\r\n            {/* Display list of tasks with a remove button*/}\r\n            {newList.length === 0 ? \"You have no pending tasks.\" :\r\n            <ul>\r\n                {newList.map(task => (\r\n                    <li key={task.id}>{task.value}  \r\n                    <button onClick = {() => handleDelete(task.value)}>Remove</button>\r\n                    \r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}